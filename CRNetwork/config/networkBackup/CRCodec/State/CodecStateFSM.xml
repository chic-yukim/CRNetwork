<StateMachine>
	<Configuration>
 		<Property startState="State:Codec:Hello" finalState="State:Codec:Bye" bufferSize="30" />
	</Configuration>
  <TransitionRuleList>
		<TransitionRule name="Trans:1" fromState="State:Codec:Hello" event="Event:Codec:Prepare" toState="State:Codec:Preparing" type="Determined" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:2" fromState="State:Codec:Preparing" event="Event:Codec:Prepare" toState="State:Codec:Preparing" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:3" fromState="State:Codec:Preparing" event="Event:Codec:PreparedAll" toState="State:Codec:Prepared" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:4" fromState="State:Codec:Preparing" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
 		<TransitionRule name="Trans:5" fromState="State:Codec:Prepared" event="Event:Codec:Start" toState="State:Codec:Starting" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:6" fromState="State:Codec:Prepared" event="Event:Codec:Finalize" toState="State:Codec:Finalizing" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:7" fromState="State:Codec:Prepared" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:8" fromState="State:Codec:Starting" event="Event:Codec:Start" toState="State:Codec:Starting" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:9" fromState="State:Codec:Starting" event="Event:Codec:StartedAll" toState="State:Codec:Started" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:10" fromState="State:Codec:Starting" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:11" fromState="State:Codec:Started" event="Event:Codec:Stop" toState="State:Codec:Stopping" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:12" fromState="State:Codec:Started" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:13" fromState="State:Codec:Stopping" event="Event:Codec:Stop" toState="State:Codec:Stopping" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:14" fromState="State:Codec:Stopping" event="Event:Codec:StoppedAll" toState="State:Codec:Stopped" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:15" fromState="State:Codec:Stopping" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:16" fromState="State:Codec:Stopped" event="Event:Codec:Start" toState="State:Codec:Started" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:17" fromState="State:Codec:Stopped" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:18" fromState="State:Codec:Starting" event="Event:Codec:Stop" toState="State:Codec:Stopping" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:19" fromState="State:Codec:Stopped" event="Event:Codec:Finalize" toState="State:Codec:Finalizing" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:20" fromState="State:Codec:Finalizing" event="Event:Codec:Finalize" toState="State:Codec:Finalizing" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:21" fromState="State:Codec:Finalizing" event="Event:Codec:FinalizedAll" toState="State:Codec:Finalized" type="Conditional" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:22" fromState="State:Codec:Finalizing" event="Event:Codec:Error" toState="State:Codec:Error" type="Conditional" err="Error:CodecStateError"/>
		<TransitionRule name="Trans:23" fromState="State:Codec:Finalized" event="Event:Codec:Exit" toState="State:Codec:Bye" type="Determined" err="Error:CodecStateError"/>
    <TransitionRule name="Trans:24" fromState="State:Codec:Finalized" event="Event:Codec:Error" toState="State:Codec:Error" type="Determined" err="Error:CodecStateError"/>
	</TransitionRuleList>
	<EventList>
		<Event name="Event:Codec:Prepare" location="Outer" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:PreparedAll" location="Inner" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:Start" location="Outer" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:StartedAll" location="Inner" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:Stop" location="Outer" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:StoppedAll" location="Inner" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:Finalize" location="Outer" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:FinalizedAll" location="Inner" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
		<Event name="Event:Codec:Exit" location="Inner" process="Sync"/>  <!-- location=Inner/Outer, process=Sync/ASync -->
    <Event name="Event:Codec:Error" location="Inner" process="Sync"/> <!-- location=Inner/Outer, process=Sync/ASync -->
	</EventList>
	<StateList>
		<State name="State:Codec:Hello"/>
		<State name="State:Codec:Preparing"/>
		<State name="State:Codec:Prepared"/>
		<State name="State:Codec:Starting"/>
		<State name="State:Codec:Started"/>
		<State name="State:Codec:Stopping"/>
		<State name="State:Codec:Stopped"/>
		<State name="State:Codec:Finalizing"/>
		<State name="State:Codec:Finalized"/>
		<State name="State:Codec:Bye"/>
    <State name="State:Codec:Error"/>
	</StateList>
	<ErrorList>
		<Error name="Error:TBD"/>
		<Error name="Error:CodecStateError"/>
	</ErrorList>
</StateMachine>
